positive assertions:
assert_equal()
assert_true
assert_in
assert_element_present
asser_element_visible
assert_attribute

diff  bw assert_element_visible and assert_element_present
visible will check the visibility of the element on the page
present will check if the element is present in the DOM

assert_in to test the partial text
assert_attribute

# negative assertions:
assert_not_equal()
assert_false

page object model is a design pattern that is used to separate selectors and test scripts,
and also it improves code reusability and maintainability.

pytest -k "test_search_for_products_and_verify_the_text" --settings=custom_settings.py

Flake 8 code linter

#  code formatter (black)
pipenv run pip install black
pipenv run pip install flake8

Data driven testing (running the same test with different sets of data)

# running individual files
pytest tests/test_home.py

# running individual tests with testname
pytest -k "test_name"
pytest -k classname
pytest -k test_upload_(takes regrex pattern)

pytest tests/test_home.py::TestHomePage::test_name

pytest /tests test_home.py tests/test_upload_page.py


groups
@pytest.mark.group_name  (pyest -m smoke)
pytest -m "smoke or regression"

exclude test
pytest tests/test_upload_page.py -m "not long_running_test"
pytest -m "smoke and not long_running_test"

# parallel testing -n flag
pytest tests/test_home.py -n=6

Cross browser testing
--browser=edge
--browser=safari

headless browser testing

